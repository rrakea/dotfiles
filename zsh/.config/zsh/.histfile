cd helena
go run helena
cd helena
go run helena
cd helena
go run helena
cd helena
go run helena
cd helena
go run helena
cd helena
go run helena
cd helena
go run helena
cd helena
go run helena
cd helena
go run helena
cd helena
go run helena
cd helena
go run helena
cd helena
go run helena
cd helena
go run helena
cd helena
go run helena
cd helena
go run helena
cd helena
go run helena
cd helena
go run helena
cd helena
go run helena
cd helena
go run helena
cd helena
go run helena
cd helena
go run helena
cd helena
go run helena
cd helena
go run helena
go mod init helena
go mod tidy
cd proj
vsa
vs
cd proj
cd scripts
nano vs
cd proj
ls
cd helena
vs
less .zshrc
go mod tidy
go get https://github.com/charmbracelet/bubbles
go get github.com/charmbracelet/bubbles
go mod tidy
cd helena
go run helena
cd helena
go run helena
cd helena
go run helena
Hyprland
update
cd proj
l
goinit common_symobols
go run main.go
go run main.go
go run main.go
go run main.go
go run main.go
go run main.go
go run main.go
go run main.go
go run main.go
go run main.go
c
go run main.go
go run main.go
go run main.go
go run main.go
go run main.go
Hyprland
libappindicator
pin libappindicator
~ypin libappindicator
yin libappindicator
which gtk
gtk --version
yin libappindicator
pin libappindicator
pin libappindicator-gtk
pin libappindicator-gtk3
spf 
cd .config
ls
nano dolphinrc
rm dolphinrc 
s
ls
dolphin -h
dolphin
dolphin &
bash -c "$(curl -fsSL https://zmk.dev/setup.sh)"
bash -c "$(curl -fsSL https://zmk.dev/setup.sh)"
fd zmk-config-corne
ls
rm -rf zmk-config-corne
cd clones
bash -c "$(curl -fsSL https://zmk.dev/setup.sh)"
ls
rm -rf zmk-config-corne
bash -c "$(curl -fsSL https://zmk.dev/setup.sh)"
cd zmk-config-corne
vs
cd clones
ls
rm -rf zmk-config-corne
cd .
cd proj
md keyboard
cd keyboard
ls
git clone https://github.com/rrakea/corne-config
cd corne-config
ls
vs
cd neon
vs
re
reload
update
Hyprland
update
pin helix
helix
cd .dotfiles
ls
dot
stow */
dot
stow */
helix
cd .config
cd helix
ls
ls -a
helix config.toml
cd Downloads
ls
s
cd .config
cd helix
md themes
s
cd helix
ls
cd themes
ls
note cli
cd Dropbox 
l
cd Obsidian
ls
cd Personal
ls
cd Notes
ls
helix .
cd ..
ls
cd ..
cd Info
ls
cd Languages
ls
cd
cd notes
ls
cdi
ls
touch helix.txt
helix .
helix
kitten theme
dot
helix
helix
cd neon
ls
helix .
c
cd note
ls
helix .
note helix
dot
h
stow */
h
hx
dot
h
cd neon
h
power
app
dot
cd .dotfiles
ls
h
cd scripts
h
cd .dotfiles
ls
cd zsh
ls
ls -a
nano .zshrc
tdot
dot
dot
cd .dotfiles
ls -a
h
cd notes
h
helix .
helix
helix
dot
cd proj
ls
cd neon
ls
h
cd neon
h
helix
cd neon
h
helix
c
update
cd neon
ls
Hyprland
cd neon
h
cd Dropbox/Obsidian
cd .obsidian
cd plugins
ls
git clone https://github.com/Sinono3/obsidian-helix
ls
cd obsidian-helix
npm i
pin npm
npm i
npm audit fix --force
npm run build
cd neon
ls
cd examples
touch stack.neon
cd .config
cd helix
ls
helix languages.toml
cd Downloads
ls
mv languages.toml ~/.config/helix/languages.toml
cd helix
ls
h
cd noen
cd neo
ls
als -a
ls -a
go run neon
go run neon -f examples/stack.neon --only_lex
go run neon -f examples/stack.neon --only_lexer
helix --health
helix --health go
pin gopls golangcli-lint-langserver
pin gopls
helix --health go
pin dlv
yin dlv
go install github.com/go-delve/delve/cmd/dlv@latest
yin dlv
helix --health go
go install github.com/nametake/golangci-lint-langserver@latest
helix --health go
cd
helix --health go
pin gofumpt
cd helix 
ls
rm languages.tomlk
rm languages.toml
helix languages.toml
helix --health go
helix --health go
helix --health go
cd helix
ls
h
helix --health go
dot
helix --health go
which go
which golangcli-lint-langserver
dot
which golangcli-lint-langserver
echo $GOPATH
which dlv
cd go
ls
cd bin
ls
dot
echo $PATH
echo $PATH
dot
echo $PATH
helix --health go
cd helix
h
helix --health go
cd neon
go run neon -f examples/stack.neon --only_lexer
go run neon -f examples/stack.neon --only_lexer
go run neon -f examples/stack.neon --only_lexer
go run neon -f examples/stack.neon --only_lexer
go run neon -f examples/stack.neon --only_lexer
go run neon -f examples/stack.neon --only_lexer
go run neon -f examples/stack.neon --only_lexer
go run neon -f examples/stack.neon --only_lexer
c
go run neon -f examples/stack.neon --only_lexer
go run neon -f examples/stack.neon --only_lexer
go run neon -f examples/stack.neon --only_lexer
go run neon -f examples/stack.neon --only_lexer
go run neon -f examples/stack.neon --only_lexer
go run neon -f examples/stack.neon --only_lexer
go run neon -f examples/stack.neon --only_lexer
go run neon -f examples/stack.neon --only_lexer
go run neon -f examples/stack.neon --only_lexer
go run neon -f examples/stack.neon --only_lexer
c
go run neon -f examples/stack.neon --only_lexer
cd neon
go run neon -f examples/stack.neon --only_lexer
go run neon -f examples/stack.neon --only_lexer
go run neon -f examples/stack.neon --only_lexer
c
go run neon -f examples/stack.neon --only_lexer
go run neon -f examples/stack.neon --only_lexer
go run neon -f examples/stack.neon --only_lexer
go run neon -f examples/stack.neon --only_lexer
go run neon -f examples/stack.neon --only_lexer
go run neon -f examples/stack.neon --only_lexer
git add .
git commit -m "lexer finished"
git push origin main
git pull origin main
git merge
code .
code .
git add .
git commit
git push origin main
cd neon
helix
h
h
helix --health go
which golangcli-lint
cd neon
s
s
cd neon
h
cd neon
ls
md src
cd src
md frontend
cd ..
mv config src/internal/config
mv config src/internal
mv lexer src/internal
mv typechecker src/internal
mv main.go src/launch.go
touch main.go
ls
mv parser src/internal
ls
mv tree src/internal
cd src/internal
ls
cd ..
ls
cd internal
ls
cd ..
cd frontend
ls
cd ..
mv internal/* frontend
cd frontend
ks
ls
cd ..
cd internal
ls
cd ..
rm internal
rm internal -rf
ls
md transpiler
ls
md backend
git add . 
cd ..
git add .
git commit -m "moved files"
git push origin main
cd neon
git add main.fo
git add main.go
ls
git add config
git commit -m "main.go change"
git push origin main
cd ..
ls
rm -rf NeonGo
git clone https://github.com/rrakea/NeonGo
cd NeonGo
ls
h
cd N
ls
cd src
ls
cd frontend
ls
md config
mv config.go config/config.go
cd neon
go run neon -f examples/stack.neon --lex
go run neon -f examples/stack.neon --lex
go run neon -f examples/stack.neon --lex
cd neon
h
cd neon
h
cd neon
go run neon -f examples/stack.neon --lex
go run neon -f examples/stack.neon --lex
go run neon -f examples/stack.neon --lex
cd frontend
ls
cd parser
ls
mv parser.go ast.go
touch parser.go
ls
rm parser.go
nano ast.go
touch parser.go
ls
cd ..
cd ..
h
cd neon
h
helix 
jshell
Hyprland
Hyprland
update
cd neon
cd frontend
ls
cd parser
ls
rm parser.go
touch parser.go
cd neon
h
cd parser
ls
touch grammar.go
note helix
cd examples
touch error.go
cd examples
ls
mv error.go error.neon
cd neon
git add .
git commit -m "added grammar"
git push origin main
cd neon
go run neon -f examples/stack.neon --rules
go run neon -f examples/stack.neon --rules
go run neon -f examples/stack.neon --rules
go run neon -f examples/stack.neon --rules
go run neon -f examples/stack.neon --rules
go run neon -f examples/stack.neon --rules
c
go run neon -f examples/stack.neon --rules
go run neon -f examples/stack.neon --rules
go run neon -f examples/stack.neon --rules
go run neon -f examples/stack.neon --rules
go run neon -f examples/stack.neon --rules
c
c
c
go run neon -f examples/stack.neon --rules
c
go run neon -f examples/stack.neon --rules
c
go run neon -f examples/stack.neon --rules
c
go run neon -f examples/stack.neon --rules
c
go run neon -f examples/stack.neon --rules
go run neon -f examples/stack.neon --rules
c
go run neon -f examples/stack.neon --rules
c
go run neon -f examples/stack.neon --rules
git add .
git commit -m "rule printing done"
git push origin main
dot
cd neon
h
cd .config
cd helix
ls
h
helix --health go
yin golangci-lint
cd neon
h
helix --health go
cd helix
h
ls
rm languages.toml
update
go install golang.org/x/tools/gopls@latest
cd neon
go run neon -f examples/stack.neon --rules
go run neon
go run neon -h
cd neon
h
h
H
Hyprland
update
reload
reload
reload
reload
reload
dot
cd neon
h
cd proj
ls
md todo_rust
hx todo_rust
helix todo_rust
cd todo
cd todo_rust
ls
cd proj
cdi
ls
cd todo_rust
touch main.rs
cd ..
ls
rm -rf todo_rust
cargo new todo
cd todo
ls
h
cd todo
h
cd todo
h
cd todo
h
cd todo
cargo run
hx --health rust
helix --health rust
pin lldb-dap
~ypin lldb-dap
yin lldb-dap
pin lldb
helix --health rust
rustup component add rust-src
pin rust-analyzer
cd helix
ls
helix langu1
helix langua
helix languages.toml
which rust-analyzer
helix --health | grep rust
cd todo
helix -v .
cd ~/.cache/helix
ls
h
cd todo 
h
cd helix 
h
cd tood
cd to
h
cd porj
cd pr
ls
rm -rf todo
cargo new contacts
helix contaxts
cd proj
l
cd contacts
ls
h
pkill minecraft
pkill minecraft-launcher
btop
ps | grep minecraft
ps 
btop
ps -A | grep minecraft
pkill minecraft-launc
pkill minecraft-launc
pkill minecraft
Hyprland
update
helix **
** helix
fzf --preview
fzf --previev
fzf --preview
pin bat
l
bat .zshrc
cd notes
h
fzf | helix
fzf
\

cd
fzf
nvim **
dot
helix **
nvim **
fzf
dot
ls -
.s a
ls -
dot
cd .dotfiles
ls
stow */
helix **
nvim **
cd clones
ls
git clone https://github.com/Aloxaf/fzf-tab
dot
cd clones
ls
cd fzf-tab
ls
dot
cd nots
cd not
h
helix $(fzf)
cd
helix $(fzf)
helix $(cdi)
helix $(cdi)
helix $(cdi)
helix "$(zoxide query -l | fzf)"
helix "$(cdi | fzf)"
cd nots
cd not
h
helix $(fzf)
cd
helix $(fzf)
helix $(cdi)
helix $(cdi)
helix $(cdi)
helix "$(zoxide query -l | fzf)"
helix "$(cdi | fzf)"
cd nots
cd not
h
helix $(fzf)
cd
helix $(fzf)
helix $(cdi)
helix $(cdi)
helix $(cdi)
helix "$(zoxide query -l | fzf)"
helix "$(cdi | fzf)"
dot
dot
proj
dot
helix "$(cdi)"
cd notes
h
helix "$(cdi)"
cd
helix "$(zoxide query -l | fzf)"
cdi; helix .
cdi; helix .
tldr brew
brew -h
curl
tldr curl
dot
proj
proj
proj
proj
kill -9 \n  [error opening dir]\
   [error opening dir]
proj
dot
cd .config
ls
cd fzf
ls
h
ls
cd ..
ls
cd config
ls
dot
cd
pin exa
eza
which eza
which exa
prm exa
yrm exa
frm exa
proj
proj
proj
tldr brew
brew update
pin brew
yin brew
brew update
sudo chown -R rrakea /opt/brew
brew update
eza
eza -h
eza help
man eza
proj
eza -1
eza
eza -a
eza --icons=always
cd 
eza --icons=always
eza --icons=always -1
eza --icons=always -w 2
eza --icons=always -w=2
eza --icons=always --width==2
eza --icons=always --width=2
eza --icons=always --width 2
eza -l
eza -l -1
eza -l
eza -l -b
eza -l -B
cd code
eza -l -b
cd proj
cd neon
ks
ls
eza -l -b
eza -l
eza -l -h
eza -l -h -M
eza -l -M --git
ls -a
eza -l -M --no-user --no-time
eza -l -M --no-user --no-time -U
eza -l -M --no-user --no-time --total-size
cd
eza -l -M --no-user --no-time --total-size
eza -l -M --no-user --U --total-size
eza -l -M --no-user -U --total-size
eza -l -M --no-user -U --total-size --icons=always
ll
l
la
dot
la
l
ll
dot
brew
proj
eza --icons=always
dot
tr
l
cdi
l
la
rm -rf .vscode
ll
proj
eza -T
cd
cd code
eza -T
eza -T --icons=always
proj
note cli
ho
cd code
tr
lt
proj
tldr fd
bat -h
bat zshrc
bat .zshrc
cd
bat .zshrc
vo
ho
dot
ho
pin ripgrep
rg -h
tldr rg
h
ho
cdi | helix
cdi | helix
dot
dot
note cli
cd note
ls
bat cli.txt
cd ascii
cd proj
cd ascii
ls
cargo run ascii 
cargo run
cargo run 1
cargo run
cargo run
cargo run
cargo run 10
cargo run 50
cd proj
ls
md ascii
rm -rf ascii
cargo new ascii
hx ascii
H
H
Hyprland
shutdown
shutdown
update
bash -c "$(curl -fsSL https://zmk.dev/setup.sh)"
pin zmk-studio
yin zmk-studio
yin zmk-studio-bin
cd keyboard
git add .
git remote add https://github.com/rrakea/zmk-config
git init zmk config
git init zmk-config
ls
la
cd zmk-config
ls
ls
la
git add .
git commit -m "5 column"
git push origin main
zmk-studio
pin libwebkit2gtk
yin libwebkit2gtk
pin webkit2gtk
zmk-studio
yin libwebkit2gtk
yin webkit2gtk-4.1
zmk-studio
zmk-studio
zmk-studio
zmk-studio
prm zmk-studio
yrm zmk-studio
yrm zmk-studio-bin
fin zmk-studio
fin zmk-studio-bin
cd proj
ls
cd keyboard
ls
git clone https://github.com/rrakea/zmk-config
h
H
Hyprland
update
update
pin wezterm
wezterm
fzf
oh
ho
cd
cd config
ls
md wezterm
hx wezterm
cd wezterm
touch wezterm.lua
h
source ~/.config/wezterm/wezterm.lua
h
source ~/.config/wezterm/wezterm.lua
h
source ~/.config/wezterm/wezterm.lua
h
source ~/.config/wezterm/wezterm.lua
h
h
source ~/.config/wezterm/wezterm.lua
wezterm
hx --health lua
pin lua-language-server
hx --health lua
ho
c
fastfetch
c
h
h
source ~/.config/wezterm/wezterm.lua
h
h
source ~/.config/wezterm/wezterm.lua
h
source ~/.config/wezterm/wezterm.lua
h
wezterm
c
ho
spf
h
wezterm
exit
