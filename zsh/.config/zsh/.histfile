h
cd neon
h
helix 
jshell
Hyprland
Hyprland
update
cd neon
cd frontend
ls
cd parser
ls
rm parser.go
touch parser.go
cd neon
h
cd parser
ls
touch grammar.go
note helix
cd examples
touch error.go
cd examples
ls
mv error.go error.neon
cd neon
git add .
git commit -m "added grammar"
git push origin main
cd neon
go run neon -f examples/stack.neon --rules
go run neon -f examples/stack.neon --rules
go run neon -f examples/stack.neon --rules
go run neon -f examples/stack.neon --rules
go run neon -f examples/stack.neon --rules
go run neon -f examples/stack.neon --rules
c
go run neon -f examples/stack.neon --rules
go run neon -f examples/stack.neon --rules
go run neon -f examples/stack.neon --rules
go run neon -f examples/stack.neon --rules
go run neon -f examples/stack.neon --rules
c
c
c
go run neon -f examples/stack.neon --rules
c
go run neon -f examples/stack.neon --rules
c
go run neon -f examples/stack.neon --rules
c
go run neon -f examples/stack.neon --rules
c
go run neon -f examples/stack.neon --rules
go run neon -f examples/stack.neon --rules
c
go run neon -f examples/stack.neon --rules
c
go run neon -f examples/stack.neon --rules
git add .
git commit -m "rule printing done"
git push origin main
dot
cd neon
h
cd .config
cd helix
ls
h
helix --health go
yin golangci-lint
cd neon
h
helix --health go
cd helix
h
ls
rm languages.toml
update
go install golang.org/x/tools/gopls@latest
cd neon
go run neon -f examples/stack.neon --rules
go run neon
go run neon -h
cd neon
h
h
H
Hyprland
update
reload
reload
reload
reload
reload
dot
cd neon
h
cd proj
ls
md todo_rust
hx todo_rust
helix todo_rust
cd todo
cd todo_rust
ls
cd proj
cdi
ls
cd todo_rust
touch main.rs
cd ..
ls
rm -rf todo_rust
cargo new todo
cd todo
ls
h
cd todo
h
cd todo
h
cd todo
h
cd todo
cargo run
hx --health rust
helix --health rust
pin lldb-dap
~ypin lldb-dap
yin lldb-dap
pin lldb
helix --health rust
rustup component add rust-src
pin rust-analyzer
cd helix
ls
helix langu1
helix langua
helix languages.toml
which rust-analyzer
helix --health | grep rust
cd todo
helix -v .
cd ~/.cache/helix
ls
h
cd todo 
h
cd helix 
h
cd tood
cd to
h
cd porj
cd pr
ls
rm -rf todo
cargo new contacts
helix contaxts
cd proj
l
cd contacts
ls
h
pkill minecraft
pkill minecraft-launcher
btop
ps | grep minecraft
ps 
btop
ps -A | grep minecraft
pkill minecraft-launc
pkill minecraft-launc
pkill minecraft
Hyprland
update
helix **
** helix
fzf --preview
fzf --previev
fzf --preview
pin bat
l
bat .zshrc
cd notes
h
fzf | helix
fzf
\

cd
fzf
nvim **
dot
helix **
nvim **
fzf
dot
ls -
.s a
ls -
dot
cd .dotfiles
ls
stow */
helix **
nvim **
cd clones
ls
git clone https://github.com/Aloxaf/fzf-tab
dot
cd clones
ls
cd fzf-tab
ls
dot
cd nots
cd not
h
helix $(fzf)
cd
helix $(fzf)
helix $(cdi)
helix $(cdi)
helix $(cdi)
helix "$(zoxide query -l | fzf)"
helix "$(cdi | fzf)"
cd nots
cd not
h
helix $(fzf)
cd
helix $(fzf)
helix $(cdi)
helix $(cdi)
helix $(cdi)
helix "$(zoxide query -l | fzf)"
helix "$(cdi | fzf)"
cd nots
cd not
h
helix $(fzf)
cd
helix $(fzf)
helix $(cdi)
helix $(cdi)
helix $(cdi)
helix "$(zoxide query -l | fzf)"
helix "$(cdi | fzf)"
dot
dot
proj
dot
helix "$(cdi)"
cd notes
h
helix "$(cdi)"
cd
helix "$(zoxide query -l | fzf)"
cdi; helix .
cdi; helix .
tldr brew
brew -h
curl
tldr curl
dot
proj
proj
proj
proj
kill -9 \n  [error opening dir]\
   [error opening dir]
proj
dot
cd .config
ls
cd fzf
ls
h
ls
cd ..
ls
cd config
ls
dot
cd
pin exa
eza
which eza
which exa
prm exa
yrm exa
frm exa
proj
proj
proj
tldr brew
brew update
pin brew
yin brew
brew update
sudo chown -R rrakea /opt/brew
brew update
eza
eza -h
eza help
man eza
proj
eza -1
eza
eza -a
eza --icons=always
cd 
eza --icons=always
eza --icons=always -1
eza --icons=always -w 2
eza --icons=always -w=2
eza --icons=always --width==2
eza --icons=always --width=2
eza --icons=always --width 2
eza -l
eza -l -1
eza -l
eza -l -b
eza -l -B
cd code
eza -l -b
cd proj
cd neon
ks
ls
eza -l -b
eza -l
eza -l -h
eza -l -h -M
eza -l -M --git
ls -a
eza -l -M --no-user --no-time
eza -l -M --no-user --no-time -U
eza -l -M --no-user --no-time --total-size
cd
eza -l -M --no-user --no-time --total-size
eza -l -M --no-user --U --total-size
eza -l -M --no-user -U --total-size
eza -l -M --no-user -U --total-size --icons=always
ll
l
la
dot
la
l
ll
dot
brew
proj
eza --icons=always
dot
tr
l
cdi
l
la
rm -rf .vscode
ll
proj
eza -T
cd
cd code
eza -T
eza -T --icons=always
proj
note cli
ho
cd code
tr
lt
proj
tldr fd
bat -h
bat zshrc
bat .zshrc
cd
bat .zshrc
vo
ho
dot
ho
pin ripgrep
rg -h
tldr rg
h
ho
cdi | helix
cdi | helix
dot
dot
note cli
cd note
ls
bat cli.txt
cd ascii
cd proj
cd ascii
ls
cargo run ascii 
cargo run
cargo run 1
cargo run
cargo run
cargo run
cargo run 10
cargo run 50
cd proj
ls
md ascii
rm -rf ascii
cargo new ascii
hx ascii
H
H
Hyprland
shutdown
shutdown
update
bash -c "$(curl -fsSL https://zmk.dev/setup.sh)"
pin zmk-studio
yin zmk-studio
yin zmk-studio-bin
cd keyboard
git add .
git remote add https://github.com/rrakea/zmk-config
git init zmk config
git init zmk-config
ls
la
cd zmk-config
ls
ls
la
git add .
git commit -m "5 column"
git push origin main
zmk-studio
pin libwebkit2gtk
yin libwebkit2gtk
pin webkit2gtk
zmk-studio
yin libwebkit2gtk
yin webkit2gtk-4.1
zmk-studio
zmk-studio
zmk-studio
zmk-studio
prm zmk-studio
yrm zmk-studio
yrm zmk-studio-bin
fin zmk-studio
fin zmk-studio-bin
cd proj
ls
cd keyboard
ls
git clone https://github.com/rrakea/zmk-config
h
H
Hyprland
update
update
pin wezterm
wezterm
fzf
oh
ho
cd
cd config
ls
md wezterm
hx wezterm
cd wezterm
touch wezterm.lua
h
source ~/.config/wezterm/wezterm.lua
h
source ~/.config/wezterm/wezterm.lua
h
source ~/.config/wezterm/wezterm.lua
h
source ~/.config/wezterm/wezterm.lua
h
h
source ~/.config/wezterm/wezterm.lua
wezterm
hx --health lua
pin lua-language-server
hx --health lua
ho
c
fastfetch
c
h
h
source ~/.config/wezterm/wezterm.lua
h
h
source ~/.config/wezterm/wezterm.lua
h
source ~/.config/wezterm/wezterm.lua
h
wezterm
c
ho
spf
h
wezterm
exit
c
ho
c
h
h
spf
c
cd dot
ls
pwd
md wezterm
ls
mv ~/.config/wezterm wezterm
stow */
md helix
mv ~/.config/helix helix
stow */
md fzf
mv ~/.config/fzf fzf
stow */
git add .
git commit -m "helix + wezterm"
git push origin main
c
ho
ho
fot
dot
ho
ho
wezterm
cd .dotfiles
ls
cd .config
cd -
cd hypr
ls
ls
la
cd .config
ls
cd hypr
ls
cd ..
cd ..
cd ..
cd wezterm
md .config
mv wezterm .config
cd ..
cd ..
cd -
cd helix 
ls
md .config
mv helix .config
cd ..
stow */
git add .
git commit -m "config fix"
git push origin main
wezterm
exit
helix
dot
exit
dot
dot
dot
c
fastfetch -h
tldr fastfetch
code .dotfiles
fzf
ho
wezterm
dot
helix .dotfiles
wezterm
ho
code .dotfiles
ho
ho
wezterm
exit
exit
ho
dot
dot
dot
helix
dot
dot
wezterm
wezterm
dot
wezterm
exit
helix
dot
dot
cd .dot
git add .
git commit -m "."
git push origin main
dto
dot
wezterm
dot
ho
wezterm
updaze
fuck
update
cdi
cdi -h
tldr zi
tldr z
cd q 
cd query code
z query code
zioxide query code
zoxide query code
dot
csi query code
cdi query code
man zoxide
zioxide query -i
zoxide query -i
dot
exit
hx
dot
exit
hx+
hx
helix (zioxide query -i) 
helix (zoxide query -i) 
helix $(zoxide query -i) 
helix $(zoxide query -i) 
path=$(zoxide query -i); [-n "$path"] && nvim "$path"
path=$(zoxide query -i) && [-n "$path"] && nvim "$path"
path=$(zoxide query -i) && [-n "$path"] && nvim "$path"
zoxide
helix (zoxide query -i) 
exit
path=$(zoxide query -i) && [-n "$path"] && nvim "$path"
path=$(zoxide query -i) && [ -n "$path"] && nvim "$path"
exit
path=$(zoxide query -i) && [ -n "$path"] && nvim "$path"
path=$(zoxide query -i) && [ -n "$path" ] && nvim "$path"
exit
path=$(zoxide query -i) && [ -n "$path" ] && nvim "$path"
nvim
exit
cd scripts
helix hx
ls
chmod +x hx
dot
source ~/.zshrc
exit
la
cd scripts
hx
ls
mv hx hxs
hxs
hxs
ls
hxs
hxs
dot
mv hxs hx
cd
hx
which hx
source ~/.zshrc
hx
source .zshrc
exit
c
hx
dot
cd dot
git add .
git commit -m "wezterm"
git push origin main
cd scri
ls
git init scripts
git add .
ls
rm -rf scripts
git init scripts .
git init .
la
git add .
git commit -m "init"
git remote add github.com/rrakea/scripts 
git remote add origin github.com/rrakea/scripts  -
git remote add github.com/rrakea/scripts  -
git remote add github.com/rrakea/scripts
ls
la
git remote -h
git remote remove -
git remote
git remota rename origin
git remote rename origin
note git
c
git remote add origin github.com/rrakea/scripts
git remote
git remote remove github.com/rrakea/scripts
git remot
git remote
git push origin main -o
git push origin main 
git push origin main
git remote remove origin
git remote add origin https://github.com/rrakea/scripts
git push origin main
git pull origin main
git push origin main
git add .
git commit -m "license"
git push origin main
git pull origin main
git pull origin main -o
git pull -h
git pull origin main -allow-unrelated-origins
git pull origin main -allow-unrelated-histories
git pull origin main --allow-unrelated-histories
git add .
git commit -m "license"
git push origin main
ls
update
ho
dot
reload
wezterm
Hyprland
we
wezterm
la /
cd lib
ls
cd /
cd lib
ls
cd ..
ls
cd opt
ls
sysy
sys
la tmp
cd tmp
cd ..
cd tmp
ls
cd ..
la
ls lost+found
sudo ls lost+found
cd lost+found
sudo cd lost+found
cd
update
sudo sbctl
sudo sbctl list
which wezterm
wezterm
rofi
dot
reload
wezterm
cd .local/share
ls
cd wezterm
ls
cd plugins
ls
echo $XDG_RUNTIME_DIR
cd /run/user/1000/wezterm
ls
h
h
cd
pin ttf-nerd-fonts-symbols-mono
prm wezterm
bin wezterm@nightly
bin --cask wezterm@nightly
pin wezterm-nightly
pin wezterm
wezterm
wezterm
wezterm -h
wezterm start
wezterm ls-fonts
wezterm
wezterm &
disown
mv ~/Downloads 
cd btop
mv ~/Downloads/tokyo-night.theme theme
hx
btop -h
htop
btop
cd config
ls
cd btop
l
ls themes
cd themes
ls
cd ...
cd ..
h
btop
Hyprland
wezterm &
cd wezterm
ls
h
dot
update
dot
source ~/.config/kitty/kitty.conf
dot
code .dotfiles
source ~/.config/kitty/kitty.conf
dot
dot
dot
dot
dot
reload
cd code
ls
code playground
jshell
Hyprland
jshell
Hyprland
update
cd scrip
l
helix update
Hyprland
update
ff
dot
update
dot
dot
ff
which neofetch
which fastfetch
fastfetch
dot
ff
yin multimc-bin
pwd
cd
cd ~/.minecraft/saves
ls
mv endpractice /home/rrakea/.local/share/multimc/instances/MCSRRanked-Linux-1.16.1-All/.minecraft/saves/
cd Downloads
ls
s
ls
unzip endpractice.zip
ls
s
mv endpractice ~/.minecraft/saves/
ls ~/.minecraft/saves
Hyprland
update
jshell
yay -Qe | helix
yay -Qe | helix
flatpak list
Hyprland
update
cd code
ls
cd proj
ls
ls
dot
cd scrip
ls
h
chmod + x vx
chmod +x vx
vx
vx
tldr nvim
nx
vx
nvim **
cd config
ls
cd dot
ls
md nvim
cd nvim
md .config/nvim
cd .config/nvim
touch nvim.rc
nvim .
nvim .
ls
rm nvim.rc
nvim .
ls
cd lua
ls
md rrakea
mv init.lua rrakea
cd ..
ls
nvim .
nvim .
stow */
nvim .
cd .config
ls
cd nvim
pwd
ls
nvim .
cd .conifg
ls
cd .confi
pwd
ls
cd dot
ls
rm -rf fzf
cd nvim
ls
cd .config
ls
rm -rf rrakea
cd nvim
ls
cd dot
stow */
reload
echo $CONGIH
kitty --debug-config
kitty -h
tldr kitty
kitty -c
cd .config
ls
helix kitty.conf
cd kitty
ls
h
cd
dot
hx
conf
conf
cd config
mv ~/code/scripts .
ls
conf
hx --health html
helix --health html
pin superhtml
yin superhtml
helix --health html
yin vscode-html-language-server
~pyin vscode-html-language-server
pin vscode-html-language-server
yin ausweisapp2
app
exit
cd htmx
go run 
go run htmx
go run htmx
go run htmx
go run htmx
go run htmx
go run htmx
go run htmx
go run htmx
code .
code .
go run htmx
go run htmx
go run htmx
go run htmx
go run htmx
go run htmx
go run htmx
helix --health html
npm install --global vscode-html-languageserver-bin
sudo npm install --global vscode-html-languageserver-bin
helix --health html
helix --health html
which vscode-html-languageserver
which vscode-html-language-server
npm install -g vscode-langservers-extracted
sudo npm install -g vscode-langservers-extracted
npm fund
hx
cd proj
ls
conf
touch -h
touch --help
c
ls
md htmx
rm -rf htmx
goinit htmx
cd htmx
go install github.com/air-verse/air@latest
ls
helix --health htmx
h
h
cd wezterm
ls
bat wezterm.lua
cd proj
ls
go init whichkeyisthat
goinit whichkeyisthat
helix --health html
cd htmx
code .
go run htmx
go run htmx
go run htmx
go run htmx
go run htmx
cat index.html
cd ..
ls
cd whichkeyisthat
go run main.go
go run main.go
go run main.go
go run main.go
code .
go run main.go
helix --health css
go run main.go
go run main.go
go run main.go
go run main.go
go run main.go
go run main.go
go run main.go
go run main.go
go run main.go
go run main.go
go run main.go
go run main.go
go run main.go
go run main.go
go run main.go
go run main.go
go run main.go
go run main.go
go run main.go
go run main.go
go run main.go
go run main.go
Hyprland
shutdown
cd whichkeyisthat
go run main.go
go run main.go
go run main.go
go run main.go
go run main.go
go run main.go
code .
go run main.go
go run main.go
go run main.go
update
cd whichkeyisthat
h
Hyprland
update
helix --health rust
pin lldb-dap
which lldb-dap
which binary
pin binary
helix --health rust
cd proj
goinit chess
ls
cd chess
ls
mf internal
rm internal
md internal
cd internal
mf launch.go
mf draw.go
cd
cd 
cd proj
ls
md chess_rs
rm -rf chess_rs
cargo new chess_rs
cd chess_rs
ls
h
cd src
ls
md engine
mf draw.rs
md util
mv draw.rs util
cd util
ls
mf board.rs
cd ..
cd ..
h
cd dot
pwd
ls
cd helix
ls
cd .config
ls
cd helix 
ls
h
go install golang.org/x/tools/gopls@latest                               # LSP\
go install github.com/go-delve/delve/cmd/dlv@latest                      # Debugger\
go install golang.org/x/tools/cmd/goimports@latest                       # Formatter\
go install github.com/nametake/golangci-lint-langserver@latest           # Linter\
go install github.com/golangci/golangci-lint/v2/cmd/golangci-lint@latest # Linter cli
go install golang.org/x/tools/gopls@latest                               # LSP\
go install github.com/go-delve/delve/cmd/dlv@latest                      # Debugger\
go install golang.org/x/tools/cmd/goimports@latest                       # Formatter\
go install github.com/nametake/golangci-lint-langserver@latest           # Linter\
go install github.com/golangci/golangci-lint/v2/cmd/golangci-lint@latest # Linter cli
go install golang.org/x/tools/gopls@latest
go install github.com/go-delve/delve/cmd/dlv@latest
go install golang.org/x/tools/cmd/goimports@latest
go install github.com/nametake/golangci-lint-langserver@latest
go install github.com/golangci/golangci-lint/v2/cmd/golangci-lint@latest
h
hx
hx
rustup component add rust-analyzer
helix --health rust
rustup component add rustfmt
h
hx 
helix -h
helix --health languages
helix -h
helix -c
helix --log
helix --health | helix
hx
hx
cd ~/.cache/helix/helix.log
cd ~/.cache/helix
ls
h
helix --health go
nivm
nvim
cd
git clone https://github.com/nvim-lua/kickstart.nvim.git "${XDG_CONFIG_HOME:-$HOME/.config}"/nvim
cdi
cd dot
ls
cd nvim
ls
cd .config
ls
cd nvim
cd ..
rm -rf nvim
git clone https://github.com/nvim-lua/kickstart.nvim.git
cd
cd proj
cd chess_rs
nvim
cd dot
stow */
cd chess_rs
nvim
cd nvim
ls
pwd
cd .config
cd nvim
ls
ls -a
cd ..
ls
cd nvim
ls
rm -rf .config
git clone https://github.com/nvim-lua/kickstart.nvim.git
ls
pwd
cd kickstart.nvim
ls
cd ..
ls
la
md .config
mv kickstart.nvim .config
cd .config
ls
mv kickstart.nvim nvim
cd chess_rs
nvim
nvim
cd
helix --version
cd helix
dot
conf
h
hx
hx
h
hx
hx
cargo run chess_rs
cd che
cargo run chess_rs
cd Downloads
ls
ls
unzip helix-25.01.1.zip
ls
helix helix-25.01.1
Hyprland
update
,00000,0,00000000000000000000000000000000
hx
mv rust_issue.log ~/docs
hx 
hx
hx
conf
which rust-analyzer
prm rust-analyzer
rustup component add rust-analyzer
hx
helix --health rust
cargo run --- -vv
cargo run --vv
cargo run -vv
cd chess
cargo run -vv
cd /tmp
ls
cd
hx -v
hx -v
hx
RUST_BACKTRACE=1 hx -vv
RUST_BACKTRACE=1 helix -vv
cd chess
RUST_BACKTRACE=1 helix -vv
RUST_BACKTRACE=1 helix . -vv
helix
kitty -b
kitty -v
helix -v
helix --version
helix
helix -h
code /home/rrakea/.cache/helix
cd helix
ls
ls
cp languages.toml ~/docs
cd
cd docs
ls
mv languages.toml languages
ls
mv languages languages.toml
cd docs
ls
helix languages.log
yazi
pin yazi
yazi
conf
update
Hyprland
ssh
yin ssh
yin openssh
spf
sudo dolphin
dolphin --sudo
df
lsblk
lsblk
lsblk
lsblk
rust-analyzer
rust-analyzer -h
Hyprland
update
conf
conf
cd config
ls
cd dotfiles
git add .
git commit -m "."
git push origin main
cd ..
cd scripts
ls
git add .
cd dot
la
cd .git
ls
cd ..
mf .gitignore
tr
lt
lt -h
lt --help
c
cd zsh
ls
la
cd .conifg
cd .config
ls
cd zsh
ls
pwd histfile
$1 = pwd
pwd | $1
echo $1
note git
